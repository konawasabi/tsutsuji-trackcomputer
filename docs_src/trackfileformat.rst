==================
軌道データ形式
==================



***********
BveTs Map
***********

軌道の形状をCurve, Gradient要素によって自軌道の形で記述したもの。

マップファイルの記述で使用できる関数、変数、演算子、他のファイルのincludeが使用可能。
ただし、関数、変数、演算子類は計算後の値のみが出力され、元の記述は保存されない。
入力マップファイルに :code:`$hoge = 100; $hoge + 50/2;` という記述があった場合、出力ファイルでは :code:`125;` に置き換わる。

入力ファイルに自軌道以外の要素を記述した場合、出力には一切反映されない。


***********
座標データ
***********

これらの形式で記述した軌道データは、他軌道としてのみ扱うことが可能。
Version 1.3.0時点では自軌道として扱えない。

相対半径を狙い通りに計算できない場合があるので、状況に応じて計算結果を手直しすること。
デフォルトでは相対半径を出力しない設定となっている。
相対半径を出力したいときは、cfgファイルで :code:`calc_relrad = True` とする。

KML形式
========

google earth、国土地理院地図などで作成した折れ線データ(linestring)を格納したKMLファイル。
折れ線以外のデータ(polygon, placemark, etc.)は変換しない。

KMLファイル内の緯度・経度データをX軸正方向: 北、Y軸正方向: 東として平面座標へ変換する。
平面座標へ変換する時の誤差が無視できない場合があるので、広範囲に渡る折れ線データを使用するときは注意する。

標高データが含まれている場合は、そのデータをZ軸成分としてそのまま変換する。
標高データを含まないファイルでは、Z軸成分=0となる。


CSV形式
========

軌道各点の座標を次の要領でcsvファイルにしたもの。

.. code-block:: text
		
   x0[m], y0[m], z0[m]
   x1[m], y1[m], z1[m]
   ...
   xn[m], yn[m], zn[m]

